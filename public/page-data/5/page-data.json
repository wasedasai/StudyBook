{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/5/",
    "result": {"data":{"markdownRemark":{"html":"<h1>Chapter5 Components &#x26; Team</h1>\n<p>第五章では、基本的なチーム開発の流れを習得しながら、コンポーネント指向について学びます。この章の最終ゴールは、あなたが担当するページを作成し、今年度のフロントエンドのレポジトリに貢献することです。</p>\n<p><img src=\"https://user-images.githubusercontent.com/65198192/132814224-2319bebf-9103-4233-a55c-29cfa545cbcb.png\" alt=\"chapter5\"></p>\n<h2>第一節 コンポーネント指向</h2>\n<h3>:dizzy:コンポーネント指向とは</h3>\n<p>まずはコンポーネント指向について学びます。コンポーネントとは部品のことです。</p>\n<p>例えばフッターはサイトの大半のページにおいて共通です。そこでフッターを部品としてあらかじめ定義しておきます。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"># app<span class=\"token operator\">/</span>components<span class=\"token operator\">/</span>Footer<span class=\"token punctuation\">.</span>js\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Footer</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>footer<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"footer-inner\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>早稲田祭<span class=\"token number\">2021</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ul <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"footerNav\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Page1<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Page2<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Page3<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Page4<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>footer<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">Footer</code>コンポーネントを<code class=\"language-text\">import</code>して使います！</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"># app<span class=\"token operator\">/</span>index<span class=\"token punctuation\">.</span>js\n\n<span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/Footer\"</span> <span class=\"token keyword\">import</span> Footer\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">app</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>header<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"footer-inner\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>早稲田祭<span class=\"token number\">2021</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>ul <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"footerNav\"</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Page1<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Page2<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Page3<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span>Page4<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>header<span class=\"token operator\">></span>\n    \n    <span class=\"token operator\">&lt;</span>main<span class=\"token operator\">></span>Hello World<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>main<span class=\"token operator\">></span>\n    \n    <span class=\"token operator\">&lt;</span>Footer <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">&lt;header>~&lt;/header></code>と<code class=\"language-text\">&lt;Footer /></code>を見比べてください。コンポーネントならとっても簡単に使いまわせると思いませんか？</p>\n<p>:warning:いつもVSCodeの補完機能に頼ってるので、この書き方で正しかったか不安です。あくまでもコンポーネント理解のためなので、コーディング時に参考にしないでください。（追記：これはReactでの書き方で、Vueと全然違いました。比較を下の方でしています。）</p>\n<h3>:dizzy:アトミックデザイン</h3>\n<p>部品化していくとコンポーネントを定義するファイルをcomponentsフォルダに大量に作成することになります。そのような場合、<code class=\"language-text\">Link</code>コンポーネントと<code class=\"language-text\">Header</code>コンポーネントを定義するファイルが同居することになります。</p>\n<p>しかし、これはあまり可読性が良い状態ではないのでもう少し整理したいですね。そこでアトミックデザインという考えが導入されました。</p>\n<p>アトミックデザインの概念では、コンポーネントを以下の５種類に分けています。</p>\n<ul>\n<li>Atoms</li>\n<li>Molecules</li>\n<li>Organisms</li>\n<li>Templates</li>\n<li>Pages</li>\n</ul>\n<p>それぞれはこんな感じです。（出典： <a href=\"https://atomicdesign.bradfrost.com/chapter-2/\">https://atomicdesign.bradfrost.com/chapter-2/</a> ）\n<img src=\"https://user-images.githubusercontent.com/65198192/132858440-4bb6979e-bb3e-4658-878b-e5a08bf3dbed.png\" alt=\"chapter5-components\"></p>\n<p>ちょっとまだ分かりづらいので、マンションをサイトとして説明しようと思います。</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">用語</th>\n<th align=\"left\">具体的なコンポーネント</th>\n<th align=\"left\">説明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Pages</td>\n<td align=\"left\">EventsSearchPage</td>\n<td align=\"left\">部屋です。</td>\n</tr>\n<tr>\n<td align=\"left\">Templates</td>\n<td align=\"left\">DefaultLayout</td>\n<td align=\"left\">間取りです。最上階は少し部屋の面積が広かったりします。</td>\n</tr>\n<tr>\n<td align=\"left\">Organisms</td>\n<td align=\"left\">Header</td>\n<td align=\"left\">ドアやシャワールームです。</td>\n</tr>\n<tr>\n<td align=\"left\">Molecules</td>\n<td align=\"left\">Navigation</td>\n<td align=\"left\">ドアノブやシャワーヘッドです。</td>\n</tr>\n<tr>\n<td align=\"left\">Atoms</td>\n<td align=\"left\">Button</td>\n<td align=\"left\">ネジや布でしょうか。</td>\n</tr>\n</tbody>\n</table>\n<p>アトミックデザインの雰囲気を感じ取ってもらったところで、Nuxtのフォルダー構成を確認します。<code class=\"language-text\">Templates</code>が<code class=\"language-text\">layouts</code>に変化していることに注意です！</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"> components/\n ├── atoms\n │   ├── Link\n │   │   ├── NormalLink.vue\n │   │   └── BoldLink.vue\n │   ├── Button\n │   │   ├── NormalButton.vue\n │   │   └── BoldButton.js\n │   └── Table\n │       ├── HeaderCell.vue\n │       └── ContentCell.vue\n ├── molecules\n │   ├── Article\n │   │   ├── MainArticle.vue\n │   │   └── SubArticle.vue\n │   └── Table\n │       ├── TableHeader.vue\n │       └── TableContent.vue\n ├── organisms\n │   ├── Header\n │   │   ├── MainHeader.vue\n │   │   └── SubHeader.vue\n │   └── Table\n │       ├── MainTable.vue\n │       └── SubTable.vue\n layouts/\n ├── error.vue\n ├── default.vue\n ├── top.vue\n pages/\n ├── search\n │   └── index.vue <span class=\"token comment\"># 企画検索ページ。`/search`でアクセスできます。</span>\n ├── events\n │   └── _id.vue <span class=\"token comment\"># 企画詳細ページ。`/events/10`などでアクセス可能。`_`を使えばurlに含まれる情報をページに渡せます。</span>\n ├── index.vue <span class=\"token comment\"># トップページはこれです。</span></code></pre></div>\n<h3>:dizzy:コンポーネントとJavaScriptの関係性</h3>\n<p>冒頭でコンポーネント指向の説明をした時に、<code class=\"language-text\">const Footer = () => {</code>みたいなコードを見たと思います。</p>\n<p>これはJavaScriptのコードです。実はコンポーネントを作るにはJavaScirptが必要です。難しく思えるかもしれませんが、コンポーネントを使うのに必要なJavaScirptの知識はそれほど難しくはありません。</p>\n<h3>:dizzy:ReactとVue</h3>\n<p>同じコンポーネント指向でもReactとVueは書き方は全く異なります。</p>\n<h3>:stars:React</h3>\n<div class=\"gatsby-highlight\" data-language=\"react.js\"><pre class=\"language-react.js\"><code class=\"language-react.js\"># app/components/Footer.js\n\nexport const Footer = () =&gt; {\n  return (\n    &lt;footer&gt;\n      &lt;div class=&quot;footer-inner&quot;&gt;\n        &lt;h2&gt;早稲田祭2021&lt;/h2&gt;\n        &lt;ul class=&quot;footerNav&quot;&gt;\n          &lt;li&gt;Page1&lt;/li&gt;\n          &lt;li&gt;Page2&lt;/li&gt;\n          &lt;li&gt;Page3&lt;/li&gt;\n          &lt;li&gt;Page4&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n    &lt;/footer&gt;\n  );\n}</code></pre></div>\n<h3>:stars:Vue</h3>\n<p>VueではほとんどJavaScriptを意識する必要はありません。</p>\n<div class=\"gatsby-highlight\" data-language=\"vue.js\"><pre class=\"language-vue.js\"><code class=\"language-vue.js\"># app/components/Footer.js\n&lt;template&gt;\n  &lt;footer&gt;\n      &lt;div class=&quot;footer-inner&quot;&gt;\n        &lt;h2&gt;早稲田祭2021&lt;/h2&gt;\n        &lt;ul class=&quot;footerNav&quot;&gt;\n          &lt;li&gt;Page1&lt;/li&gt;\n          &lt;li&gt;Page2&lt;/li&gt;\n          &lt;li&gt;Page3&lt;/li&gt;\n          &lt;li&gt;Page4&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/div&gt;\n    &lt;/footer&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\nfooter {\n  padding: 16px;\n}\n&lt;/style&gt;</code></pre></div>\n<h2>第二節 チーム開発</h2>\n<p>第三章で基本的な流れを再度確認しておいてください。</p>\n<p>:one: リポジトリのクローン</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> clone <span class=\"token operator\">&lt;</span>URL<span class=\"token operator\">></span></code></pre></div>\n<p>:two: VSCodeでターミナルを開いて現在いるブランチを確認します。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> branch\n<span class=\"token comment\"># developと表示されればOKです。</span></code></pre></div>\n<p>:three: ブランチを作成します。その次にGitHubにブランチを登録します。</p>\n<p>:warning: <code class=\"language-text\">&lt;BranchName></code>は、<code class=\"language-text\">akinori/create-header-component</code>、<code class=\"language-text\">akinori/create-top-page</code>や<code class=\"language-text\">akinori/add-logo-to-header-component</code>のように、自分の名前を入れた何をしようとしているのかパット見て分かるようなブランチ名にしてください。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> checkout -b <span class=\"token operator\">&lt;</span>BranchName<span class=\"token operator\">></span>\n$ <span class=\"token function\">git</span> branch\n<span class=\"token comment\"># &lt;BranchName>が表示されればOKです。</span>\n$ <span class=\"token function\">git</span> push -u origin <span class=\"token operator\">&lt;</span>BranchName<span class=\"token operator\">></span></code></pre></div>\n<p>:four: ある程度進むごとにコミットします。拡張機能のソース管理を開いて一つ一つプラスボタンを押下していきます。コミットするファイルを選択し終えたら、以下のコマンドを実行します。ダブルクオーテーションマークの中身は自分が何をしたのかをメッセージとして書いてください。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> commit -m <span class=\"token string\">\"Headerの骨格を作成しました。\"</span></code></pre></div>\n<p>:five: 作業が完了したら以下のコマンドを実行してください。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">git</span> push</code></pre></div>\n<p>:six: 次にPullRequestをします。リポジトリのPull requestsタブをクリックします。そして右にある緑色の「New pull request」を押下してください。</p>\n<p>その後、自分がどのようなことをしたのかやレビュー担当者への連絡事項などを記載してPullRequestを作成してください。</p>\n<p>:warning: <code class=\"language-text\">base: develop &lt;- compare: &lt;BranchName></code>になっていることを確認してください。</p>\n<p>:seven: 終わったらレビュー担当者に連絡してください。レビュー担当者は、必要な項目をすべてクリアしていると確認した段階で、マージします。</p>\n<h2>お疲れ様！！</h2>\n<p>今年度のWebサイト作成頑張りましょう！</p>\n<p><img src=\"https://media.giphy.com/media/3o7abB06u9bNzA8lu8/giphy.gif?cid=ecf05e47bhbdz7hr6xgdcp5nzgdokl0gbzm3qw4o1g6qsx5p&#x26;rid=giphy.gif&#x26;ct=g\" alt=\"gif\"></p>","frontmatter":{"title":"Components & Team"}}},"pageContext":{"slug":"/5/"}},
    "staticQueryHashes": ["3649515864"]}